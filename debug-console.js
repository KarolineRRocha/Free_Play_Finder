// Debug script para verificar carregamento dos dados
console.log('üîç Debug: Verificando carregamento dos dados...');

// Fun√ß√£o para verificar dados
function checkData() {
  console.log('üìä Status dos dados:');
  console.log('- window.gamesData:', window.gamesData);

  if (window.gamesData) {
    console.log('- gamesList length:', window.gamesData.gamesList?.length);
    console.log('- gameDetails length:', window.gamesData.gameDetails?.length);
    console.log('- profile:', window.gamesData.profile);
    console.log('- genres:', window.gamesData.genres);
    console.log('- platforms:', window.gamesData.platforms);

    // Verificar se h√° dados espec√≠ficos
    if (window.gamesData.gamesList && window.gamesData.gamesList.length > 0) {
      console.log('- Primeiro jogo:', window.gamesData.gamesList[0]);
    }
  } else {
    console.log('‚ùå window.gamesData n√£o est√° definido');
  }
}

// Verificar ap√≥s um delay
setTimeout(checkData, 1000);
setTimeout(checkData, 3000);
setTimeout(checkData, 5000);

// Verificar se a API mock est√° funcionando
console.log('üîß Verificando API Mock...');
console.log('- fetch interceptado:', typeof window.fetch);

// Testar uma requisi√ß√£o
setTimeout(() => {
  console.log('üß™ Testando requisi√ß√£o para gamesList...');
  fetch('/api/gamesList')
    .then(response => response.json())
    .then(data => {
      console.log('‚úÖ Resposta da API:', data);
    })
    .catch(error => {
      console.log('‚ùå Erro na requisi√ß√£o:', error);
    });
}, 2000); 